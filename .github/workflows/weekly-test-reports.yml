# .github/workflows/weekly-test-reports.yml
name: Weekly Test Reports

on:
    schedule:
        # Каждую пятницу в 18:00 UTC (21:00 по Киеву)
        - cron: '0 18 * * 5'
    workflow_dispatch: # Возможность запустить вручную

permissions:
    contents: read
    pages: write
    id-token: write

# Добавляем concurrency для избежания конфликтов
concurrency:
    group: 'pages'
    cancel-in-progress: true

jobs:
    test-and-report:
        runs-on: ubuntu-latest
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Получаем всю историю для сравнения

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'

            - name: Clean npm cache
              run: npm cache clean --force

            - name: Install dependencies with retry
              run: |
                  # Устанавливаем зависимости с несколькими попытками
                  for i in {1..3}; do
                    echo "Attempt $i to install dependencies..."
                    if npm ci --prefer-offline --no-audit --progress=false; then
                      echo "✅ Dependencies installed successfully"
                      break
                    else
                      echo "❌ Attempt $i failed"
                      if [ $i -eq 3 ]; then
                        echo "All attempts failed, trying with --legacy-peer-deps"
                        npm ci --legacy-peer-deps --prefer-offline --no-audit --progress=false
                      fi
                      sleep 10
                    fi
                  done

            - name: Verify jest-html-reporters installation
              run: |
                  echo "Checking if jest-html-reporters is installed..."
                  if npm list jest-html-reporters --depth=0; then
                    echo "✅ jest-html-reporters is installed"
                  else
                    echo "❌ jest-html-reporters not found, installing manually..."
                    npm install --save-dev jest-html-reporters
                  fi

            - name: Create reports directory
              run: mkdir -p reports/coverage reports/tests

            - name: Get previous coverage data
              run: |
                  # Пытаемся получить предыдущий отчет с GitHub Pages
                  curl -f -s https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/coverage-summary.json > reports/previous-coverage.json 2>/dev/null || echo '{"total":{"lines":{"pct":0},"functions":{"pct":0},"branches":{"pct":0},"statements":{"pct":0}}}' > reports/previous-coverage.json
                  echo "Previous coverage file:"
                  cat reports/previous-coverage.json

            - name: Run tests with coverage
              run: |
                  echo "Running tests with coverage..."

                  # Проверяем наличие тестов
                  if [ ! -f "package.json" ]; then
                    echo "❌ package.json not found"
                    exit 1
                  fi

                  # Запускаем тесты с улучшенной обработкой ошибок
                  if npm run test:coverage-report; then
                    echo "✅ Tests completed successfully"
                  else
                    echo "⚠️ Tests completed with issues, but continuing..."
                  fi

                  echo "Listing all files after test run:"
                  ls -la

                  # Проверяем что создалось
                  echo "Checking for coverage directory:"
                  if [ -d "coverage" ]; then
                    echo "Coverage directory exists:"
                    ls -la coverage/
                  else
                    echo "No coverage directory found"
                  fi

                  echo "Checking for test report:"
                  if [ -f "test-report.html" ]; then
                    echo "Test report exists"
                    ls -la test-report.html
                  elif [ -f "jest_html_reporters.html" ]; then
                    echo "Found jest_html_reporters.html, renaming to test-report.html"
                    mv jest_html_reporters.html test-report.html
                  else
                    echo "No test report found"
                  fi

            - name: Copy reports with fallbacks
              run: |
                  echo "Copying reports with fallbacks..."

                  # Копируем coverage отчет если он существует
                  if [ -d "coverage" ] && [ "$(ls -A coverage)" ]; then
                    echo "Copying coverage files..."
                    cp -r coverage/* reports/coverage/ 2>/dev/null || echo "Failed to copy coverage files"
                    
                    # Копируем coverage-summary.json в корень reports
                    if [ -f "coverage/coverage-summary.json" ]; then
                      cp coverage/coverage-summary.json reports/
                      echo "Coverage summary copied"
                    fi
                  else
                    echo "No coverage data found, creating empty reports..."
                    # Создаем пустые файлы для coverage
                    mkdir -p reports/coverage
                    echo '<html><body><h1>No Coverage Data</h1><p>Tests did not generate coverage reports. Check Jest configuration.</p></body></html>' > reports/coverage/index.html
                    echo '{"total":{"lines":{"pct":0},"functions":{"pct":0},"branches":{"pct":0},"statements":{"pct":0}}}' > reports/coverage-summary.json
                  fi

                  # Копируем HTML отчет о тестах если он существует
                  if [ -f "test-report.html" ]; then
                    echo "Copying test report..."
                    cp test-report.html reports/tests/
                  else
                    echo "Creating placeholder test report..."
                    echo '<!DOCTYPE html>
                    <html>
                    <head><title>Test Results</title></head>
                    <body>
                      <h1>No Test Results Available</h1>
                      <p>Tests may have failed to run or generate reports.</p>
                      <p>Check the workflow logs for more information.</p>
                      <p>Make sure jest-html-reporters is properly configured.</p>
                    </body>
                    </html>' > reports/tests/test-report.html
                  fi

            - name: Debug - List generated files
              run: |
                  echo "=== Final reports directory structure ==="
                  find reports -type f -exec ls -la {} \;
                  echo ""
                  echo "=== Content samples ==="
                  echo "Coverage summary content:"
                  cat reports/coverage-summary.json 2>/dev/null || echo "No coverage summary"
                  echo ""
                  echo "Previous coverage content:"
                  cat reports/previous-coverage.json 2>/dev/null || echo "No previous coverage"

            - name: Generate coverage trend analysis
              run: |
                  node -e "
                  const fs = require('fs');

                  console.log('Generating trend analysis...');

                  // Читаем текущее покрытие
                  let currentCoverage = {};
                  try {
                    const currentData = fs.readFileSync('reports/coverage-summary.json', 'utf8');
                    currentCoverage = JSON.parse(currentData);
                    console.log('Current coverage loaded');
                  } catch (e) {
                    console.log('Failed to load current coverage, using defaults');
                    currentCoverage = { total: { lines: { pct: 0 }, functions: { pct: 0 }, branches: { pct: 0 }, statements: { pct: 0 } } };
                  }

                  // Читаем предыдущее покрытие
                  let previousCoverage = {};
                  try {
                    const previousData = fs.readFileSync('reports/previous-coverage.json', 'utf8');
                    previousCoverage = JSON.parse(previousData);
                    console.log('Previous coverage loaded');
                  } catch (e) {
                    console.log('Failed to load previous coverage, using defaults');
                    previousCoverage = { total: { lines: { pct: 0 }, functions: { pct: 0 }, branches: { pct: 0 }, statements: { pct: 0 } } };
                  }

                  // Безопасная функция для получения процента покрытия
                  function getCoveragePercent(coverage, type) {
                    try {
                      return coverage?.total?.[type]?.pct || 0;
                    } catch (e) {
                      return 0;
                    }
                  }

                  // Текущие показатели
                  const current = {
                    lines: getCoveragePercent(currentCoverage, 'lines'),
                    functions: getCoveragePercent(currentCoverage, 'functions'),
                    branches: getCoveragePercent(currentCoverage, 'branches'),
                    statements: getCoveragePercent(currentCoverage, 'statements')
                  };

                  // Предыдущие показатели
                  const previous = {
                    lines: getCoveragePercent(previousCoverage, 'lines'),
                    functions: getCoveragePercent(previousCoverage, 'functions'),
                    branches: getCoveragePercent(previousCoverage, 'branches'),
                    statements: getCoveragePercent(previousCoverage, 'statements')
                  };

                  // Расчет трендов
                  const trends = {
                    lines: current.lines - previous.lines,
                    functions: current.functions - previous.functions,
                    branches: current.branches - previous.branches,
                    statements: current.statements - previous.statements
                  };

                  console.log('Current:', current);
                  console.log('Previous:', previous);
                  console.log('Trends:', trends);

                  // Генерация HTML отчета о трендах
                  const trendHtml = \`<!DOCTYPE html>
                  <html lang=\"uk\">
                  <head>
                    <meta charset=\"UTF-8\">
                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
                    <title>Test Coverage Trend Report</title>
                    <style>
                      body { 
                        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; 
                        margin: 0; 
                        padding: 20px; 
                        background-color: #f8f9fa; 
                        line-height: 1.6;
                      }
                      .container { 
                        max-width: 1200px; 
                        margin: 0 auto; 
                        background: white; 
                        padding: 30px; 
                        border-radius: 12px; 
                        box-shadow: 0 4px 6px rgba(0,0,0,0.1); 
                      }
                      .header {
                        text-align: center;
                        margin-bottom: 30px;
                        padding-bottom: 20px;
                        border-bottom: 2px solid #e9ecef;
                      }
                      .header h1 {
                        color: #212529;
                        margin: 0 0 10px 0;
                        font-size: 2.5em;
                      }
                      .date { 
                        font-size: 1.1em; 
                        color: #6c757d; 
                        margin: 0;
                      }
                      .trend-positive { color: #28a745; font-weight: bold; }
                      .trend-negative { color: #dc3545; font-weight: bold; }
                      .trend-neutral { color: #6c757d; }
                      .coverage-table { 
                        border-collapse: collapse; 
                        width: 100%; 
                        margin: 30px 0; 
                        font-size: 1.1em;
                      }
                      .coverage-table th, .coverage-table td { 
                        border: 1px solid #dee2e6; 
                        padding: 15px; 
                        text-align: left; 
                      }
                      .coverage-table th { 
                        background-color: #495057; 
                        color: white;
                        font-weight: 600; 
                        text-align: center;
                      }
                      .coverage-table td {
                        text-align: center;
                      }
                      .coverage-table tbody tr:nth-child(even) {
                        background-color: #f8f9fa;
                      }
                      .coverage-table tbody tr:hover {
                        background-color: #e9ecef;
                      }
                      .links { 
                        margin-top: 40px; 
                        padding: 20px;
                        background: #f8f9fa;
                        border-radius: 8px;
                      }
                      .links h2 {
                        margin-top: 0;
                        color: #495057;
                      }
                      .links ul { 
                        list-style-type: none; 
                        padding: 0; 
                      }
                      .links li { 
                        margin: 15px 0; 
                      }
                      .links a { 
                        color: #007bff; 
                        text-decoration: none; 
                        padding: 12px 20px; 
                        background: white; 
                        border-radius: 6px; 
                        display: inline-block;
                        border: 1px solid #dee2e6;
                        transition: all 0.2s;
                        font-weight: 500;
                      }
                      .links a:hover { 
                        background: #007bff;
                        color: white;
                        transform: translateY(-1px);
                        box-shadow: 0 2px 4px rgba(0,123,255,0.3);
                      }
                      .alert { 
                        padding: 20px; 
                        border-radius: 8px; 
                        margin: 20px 0; 
                        border-left: 4px solid;
                      }
                      .alert.info { 
                        background: #e3f2fd; 
                        border-left-color: #2196f3; 
                        color: #0d47a1; 
                      }
                      .alert.warning { 
                        background: #fff3cd; 
                        border-left-color: #ffc107; 
                        color: #856404; 
                      }
                      .alert h3 {
                        margin-top: 0;
                        color: inherit;
                      }
                      .troubleshooting ul {
                        margin: 15px 0;
                        padding-left: 25px;
                      }
                      .troubleshooting li {
                        margin: 8px 0;
                      }
                    </style>
                  </head>
                  <body>
                    <div class=\"container\">
                      <div class=\"header\">
                        <h1>🧪 Test Coverage Trend Report</h1>
                        <p class=\"date\">📅 Generated: \${new Date().toLocaleString('uk-UA', { 
                          timeZone: 'Europe/Kiev',
                          dateStyle: 'full',
                          timeStyle: 'medium'
                        })}</p>
                      </div>
                      
                      <div class=\"alert info\">
                        <h3>📊 About This Report</h3>
                        <p>This report shows test coverage trends over time. Coverage data is collected automatically and compared with previous runs to show improvement or regression trends.</p>
                      </div>
                      
                      <div class=\"alert warning\">
                        <h3>⚠️ Installation Issue Detected</h3>
                        <p>There was an issue installing dependencies during the workflow run. This may affect test results and coverage data. Check the workflow logs for more details.</p>
                      </div>
                      
                      <table class=\"coverage-table\">
                        <thead>
                          <tr>
                            <th>📈 Metric</th>
                            <th>Current</th>
                            <th>Previous</th>
                            <th>Trend</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><strong>📄 Lines</strong></td>
                            <td>\${current.lines.toFixed(2)}%</td>
                            <td>\${previous.lines.toFixed(2)}%</td>
                            <td class=\"\${trends.lines > 0 ? 'trend-positive' : trends.lines < 0 ? 'trend-negative' : 'trend-neutral'}\">
                              \${trends.lines > 0 ? '+' : ''}\${trends.lines.toFixed(2)}%
                              \${trends.lines > 0 ? ' 📈' : trends.lines < 0 ? ' 📉' : ' ➡️'}
                            </td>
                          </tr>
                          <tr>
                            <td><strong>⚙️ Functions</strong></td>
                            <td>\${current.functions.toFixed(2)}%</td>
                            <td>\${previous.functions.toFixed(2)}%</td>
                            <td class=\"\${trends.functions > 0 ? 'trend-positive' : trends.functions < 0 ? 'trend-negative' : 'trend-neutral'}\">
                              \${trends.functions > 0 ? '+' : ''}\${trends.functions.toFixed(2)}%
                              \${trends.functions > 0 ? ' 📈' : trends.functions < 0 ? ' 📉' : ' ➡️'}
                            </td>
                          </tr>
                          <tr>
                            <td><strong>🌿 Branches</strong></td>
                            <td>\${current.branches.toFixed(2)}%</td>
                            <td>\${previous.branches.toFixed(2)}%</td>
                            <td class=\"\${trends.branches > 0 ? 'trend-positive' : trends.branches < 0 ? 'trend-negative' : 'trend-neutral'}\">
                              \${trends.branches > 0 ? '+' : ''}\${trends.branches.toFixed(2)}%
                              \${trends.branches > 0 ? ' 📈' : trends.branches < 0 ? ' 📉' : ' ➡️'}
                            </td>
                          </tr>
                          <tr>
                            <td><strong>📝 Statements</strong></td>
                            <td>\${current.statements.toFixed(2)}%</td>
                            <td>\${previous.statements.toFixed(2)}%</td>
                            <td class=\"\${trends.statements > 0 ? 'trend-positive' : trends.statements < 0 ? 'trend-negative' : 'trend-neutral'}\">
                              \${trends.statements > 0 ? '+' : ''}\${trends.statements.toFixed(2)}%
                              \${trends.statements > 0 ? ' 📈' : trends.statements < 0 ? ' 📉' : ' ➡️'}
                            </td>
                          </tr>
                        </tbody>
                      </table>
                      
                      <div class=\"links\">
                        <h2>📋 Available Reports</h2>
                        <ul>
                          <li><a href=\"./coverage/index.html\">📊 Detailed Coverage Report</a></li>
                          <li><a href=\"./tests/test-report.html\">🧪 Test Results Report</a></li>
                        </ul>
                      </div>
                      
                      <div class=\"alert info troubleshooting\">
                        <h3>🔧 Troubleshooting</h3>
                        <p>If you see 0% coverage or installation errors:</p>
                        <ul>
                          <li><strong>Dependencies:</strong> Make sure jest-html-reporters is in package.json devDependencies</li>
                          <li><strong>Jest Configuration:</strong> Verify collectCoverage is true and reporters include jest-html-reporters</li>
                          <li><strong>Network Issues:</strong> Retry the workflow - npm installation can fail due to network timeouts</li>
                          <li><strong>Package Lock:</strong> Consider updating package-lock.json if persistent issues occur</li>
                        </ul>
                        <p><strong>Next Steps:</strong> Check the Actions logs and retry the workflow if needed.</p>
                      </div>
                    </div>
                  </body>
                  </html>\`;

                  fs.writeFileSync('reports/index.html', trendHtml);
                  console.log('✅ Trend report generated successfully');
                  "

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: './reports'

            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
